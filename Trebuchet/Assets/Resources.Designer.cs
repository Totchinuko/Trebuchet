//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trebuchet.Assets {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.1.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Trebuchet.Assets.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Already Exists.
        /// </summary>
        public static string AlreadyExists {
            get {
                return ResourceManager.GetString("AlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This name is already used.
        /// </summary>
        public static string AlreadyExistsText {
            get {
                return ResourceManager.GetString("AlreadyExistsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create.
        /// </summary>
        public static string Create {
            get {
                return ResourceManager.GetString("Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dashboard.
        /// </summary>
        public static string Dashboard {
            get {
                return ResourceManager.GetString("Dashboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletion.
        /// </summary>
        public static string Deletion {
            get {
                return ResourceManager.GetString("Deletion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you wish to delete the selected profile {0} ?.
        /// </summary>
        public static string DeletionText {
            get {
                return ResourceManager.GetString("DeletionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory does not exists.
        /// </summary>
        public static string DirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate.
        /// </summary>
        public static string Duplicate {
            get {
                return ResourceManager.GetString("Duplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found.
        /// </summary>
        public static string Found {
            get {
                return ResourceManager.GetString("Found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game could not be found in this Directory.
        /// </summary>
        public static string GameDirectoryInvalidError {
            get {
                return ResourceManager.GetString("GameDirectoryInvalidError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Folder Reset.
        /// </summary>
        public static string GameFolderReset {
            get {
                return ResourceManager.GetString("GameFolderReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your game directory contain saved data from your previous use of the game. Game Directory has been reset, please set it up again..
        /// </summary>
        public static string GameFolderResetText {
            get {
                return ResourceManager.GetString("GameFolderResetText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GameSaves.
        /// </summary>
        public static string GameSaves {
            get {
                return ResourceManager.GetString("GameSaves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saved Data.
        /// </summary>
        public static string HandleOriginalSavedDirectory {
            get {
                return ResourceManager.GetString("HandleOriginalSavedDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your game directory contain saved data from your previous use of the game. In order to use the features of the launcher, the folder will be renamed and its content copied into a new profile to use with the launcher. All your data will still be under the folder Saved_Original.\nDo you wish to continue ?.
        /// </summary>
        public static string HandleOriginalSavedDirectoryText {
            get {
                return ResourceManager.GetString("HandleOriginalSavedDirectoryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Install {
            get {
                return ResourceManager.GetString("Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install path cannot be in the game Saved folder.
        /// </summary>
        public static string InstallPathInGameError {
            get {
                return ResourceManager.GetString("InstallPathInGameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory is invalid.
        /// </summary>
        public static string InvalidDirectory {
            get {
                return ResourceManager.GetString("InvalidDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Json.
        /// </summary>
        public static string InvalidJson {
            get {
                return ResourceManager.GetString("InvalidJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded json could not be parsed..
        /// </summary>
        public static string InvalidJsonText {
            get {
                return ResourceManager.GetString("InvalidJsonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid URL.
        /// </summary>
        public static string InvalidURL {
            get {
                return ResourceManager.GetString("InvalidURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The steam URL seems to be missing its ID to be valid..
        /// </summary>
        public static string InvalidURLText {
            get {
                return ResourceManager.GetString("InvalidURLText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill.
        /// </summary>
        public static string Kill {
            get {
                return ResourceManager.GetString("Kill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Killing a process will trigger an abrupt ending of the program and can lead to Data loss and/or data corruption. Do you wish to continue ?.
        /// </summary>
        public static string KillText {
            get {
                return ResourceManager.GetString("KillText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Modified.
        /// </summary>
        public static string LastModified {
            get {
                return ResourceManager.GetString("LastModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Update.
        /// </summary>
        public static string LastUpdate {
            get {
                return ResourceManager.GetString("LastUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Workshop (Live).
        /// </summary>
        public static string LiveMod {
            get {
                return ResourceManager.GetString("LiveMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading.
        /// </summary>
        public static string Loading {
            get {
                return ResourceManager.GetString("Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local File.
        /// </summary>
        public static string LocalMod {
            get {
                return ResourceManager.GetString("LocalMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Client Files.
        /// </summary>
        public static string ManageClient {
            get {
                return ResourceManager.GetString("ManageClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Trebuchet to manage the game files. Files are moved out of the game folder and into you documents. This will protected them when reinstalling the game and allow you to have multiple save folder that can swap, useful if multiple persons play on the same computer..
        /// </summary>
        public static string ManageClientText {
            get {
                return ResourceManager.GetString("ManageClientText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing.
        /// </summary>
        public static string Missing {
            get {
                return ResourceManager.GetString("Missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modlist Name.
        /// </summary>
        public static string ModlistName {
            get {
                return ResourceManager.GetString("ModlistName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods.
        /// </summary>
        public static string Mods {
            get {
                return ResourceManager.GetString("Mods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose which game save need to be copied back into the game files.
        /// </summary>
        public static string OnBoardingChooseGameSaveText {
            get {
                return ResourceManager.GetString("OnBoardingChooseGameSaveText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Save.
        /// </summary>
        public static string OnBoardingGameSave {
            get {
                return ResourceManager.GetString("OnBoardingGameSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locate Conan Exiles.
        /// </summary>
        public static string OnBoardingLocateConan {
            get {
                return ResourceManager.GetString("OnBoardingLocateConan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder selected does not contain Conan Exiles.
        /// </summary>
        public static string OnBoardingLocateConanError {
            get {
                return ResourceManager.GetString("OnBoardingLocateConanError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicate to Trebuchet where to find your Conan Exile game.
        /// </summary>
        public static string OnBoardingLocateConanText {
            get {
                return ResourceManager.GetString("OnBoardingLocateConanText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Files Management.
        /// </summary>
        public static string OnBoardingManageConan {
            get {
                return ResourceManager.GetString("OnBoardingManageConan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leave Game Untouched.
        /// </summary>
        public static string OnBoardingManageConanNo {
            get {
                return ResourceManager.GetString("OnBoardingManageConanNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your files will remain in the Saved directory.
        /// </summary>
        public static string OnBoardingManageConanNoSub {
            get {
                return ResourceManager.GetString("OnBoardingManageConanNoSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Trebuchet to handle your game files? If so, Trebuchet will move your game files located in the Saved folder, into your MyDocuments directory. This will allow two things:
        /// (a) To be able to create as many saves as you wish, and start the game using any of them
        /// (b) To offer extra settings for the game through Trebuchet.
        /// </summary>
        public static string OnBoardingManageConanText {
            get {
                return ResourceManager.GetString("OnBoardingManageConanText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To apply your choice, Trebuchet need permission to write into your game directory.
        /// </summary>
        public static string OnBoardingManageConanUac {
            get {
                return ResourceManager.GetString("OnBoardingManageConanUac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Game Management.
        /// </summary>
        public static string OnBoardingManageConanYes {
            get {
                return ResourceManager.GetString("OnBoardingManageConanYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files will be moved to MyDocuments.
        /// </summary>
        public static string OnBoardingManageConanYesSub {
            get {
                return ResourceManager.GetString("OnBoardingManageConanYesSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a name for the new trebuchet save that will contain your files.
        /// </summary>
        public static string OnBoardingNewGameSave {
            get {
                return ResourceManager.GetString("OnBoardingNewGameSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot be empty.
        /// </summary>
        public static string OnBoardingNewGameSaveEmpty {
            get {
                return ResourceManager.GetString("OnBoardingNewGameSaveEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This name is already taken.
        /// </summary>
        public static string OnBoardingNewGameSaveError {
            get {
                return ResourceManager.GetString("OnBoardingNewGameSaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This name contain invalid characters.
        /// </summary>
        public static string OnBoardingNewGameSaveInvalid {
            get {
                return ResourceManager.GetString("OnBoardingNewGameSaveInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A previous installation of Trebuchet has been detected and must be upgraded to function with this version. Once this task is over, previous version of Trebuchet will not work anymore. 
        ///Do you wish to proceed ?.
        /// </summary>
        public static string OnBoardingUpgrade {
            get {
                return ResourceManager.GetString("OnBoardingUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while your files are being copied.
        /// </summary>
        public static string OnBoardingUpgradeCopy {
            get {
                return ResourceManager.GetString("OnBoardingUpgradeCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you do not wish to upgrade now, please close Trebuchet..
        /// </summary>
        public static string OnBoardingUpgradeSub {
            get {
                return ResourceManager.GetString("OnBoardingUpgradeSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to upgrade your installation of Trebuchet, Write permission are needed. 
        ///With your permission, Trebuchet will restart and request administrative privileges..
        /// </summary>
        public static string OnBoardingUpgradeUac {
            get {
                return ResourceManager.GetString("OnBoardingUpgradeUac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trebuchet&apos;s Features.
        /// </summary>
        public static string OnBoardingUsageChoice {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modding.
        /// </summary>
        public static string OnBoardingUsageChoiceModder {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoiceModder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will enable both server and game features for mod testing.
        /// </summary>
        public static string OnBoardingUsageChoiceModderSub {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoiceModderSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play Conan Exiles.
        /// </summary>
        public static string OnBoardingUsageChoicePlayer {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoicePlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will disable Trebuchet&apos;s server features.
        /// </summary>
        public static string OnBoardingUsageChoicePlayerSub {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoicePlayerSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Servers.
        /// </summary>
        public static string OnBoardingUsageChoiceServer {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoiceServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will disable Trebuchet&apos;s game features.
        /// </summary>
        public static string OnBoardingUsageChoiceServerSub {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoiceServerSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select what usage to intend to make of Trebuchet. This will preconfigure the app with base settings that you can change later if you change your mind..
        /// </summary>
        public static string OnBoardingUsageChoiceText {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Name.
        /// </summary>
        public static string ProfileName {
            get {
                return ResourceManager.GetString("ProfileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Consoles.
        /// </summary>
        public static string ServerConsoles {
            get {
                return ResourceManager.GetString("ServerConsoles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server failed to start.
        /// </summary>
        public static string ServerFailedStart {
            get {
                return ResourceManager.GetString("ServerFailedStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server failed to start properly. See the logs for more information..
        /// </summary>
        public static string ServerFailedStartText {
            get {
                return ResourceManager.GetString("ServerFailedStartText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Log Filters.
        /// </summary>
        public static string ServerLogFilter {
            get {
                return ResourceManager.GetString("ServerLogFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some server instances are not yet installed..
        /// </summary>
        public static string ServerNotInstalled {
            get {
                return ResourceManager.GetString("ServerNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Saves.
        /// </summary>
        public static string ServerSaves {
            get {
                return ResourceManager.GetString("ServerSaves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected to Steam.
        /// </summary>
        public static string SteamConnected {
            get {
                return ResourceManager.GetString("SteamConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam is unavailable.
        /// </summary>
        public static string SteamDisconnected {
            get {
                return ResourceManager.GetString("SteamDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Workshop (TestLive).
        /// </summary>
        public static string TestLiveMod {
            get {
                return ResourceManager.GetString("TestLiveMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trebuchet is busy..
        /// </summary>
        public static string TrebuchetBusy {
            get {
                return ResourceManager.GetString("TrebuchetBusy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write Permission.
        /// </summary>
        public static string UACDialog {
            get {
                return ResourceManager.GetString("UACDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trebuchet require administrative rights in order to handle protected files for the following reason(s):.
        /// </summary>
        public static string UACDialogText {
            get {
                return ResourceManager.GetString("UACDialogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Available.
        /// </summary>
        public static string UpdateAvailable {
            get {
                return ResourceManager.GetString("UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating mods.
        /// </summary>
        public static string UpdateModsLabel {
            get {
                return ResourceManager.GetString("UpdateModsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating servers.
        /// </summary>
        public static string UpdateServersLabel {
            get {
                return ResourceManager.GetString("UpdateServersLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade.
        /// </summary>
        public static string Upgrade {
            get {
                return ResourceManager.GetString("Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up to Date.
        /// </summary>
        public static string UpToDate {
            get {
                return ResourceManager.GetString("UpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validate.
        /// </summary>
        public static string Validate {
            get {
                return ResourceManager.GetString("Validate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying mod files.
        /// </summary>
        public static string VerifyModsLabel {
            get {
                return ResourceManager.GetString("VerifyModsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying server files.
        /// </summary>
        public static string VerifyServersLabel {
            get {
                return ResourceManager.GetString("VerifyServersLabel", resourceCulture);
            }
        }
    }
}
