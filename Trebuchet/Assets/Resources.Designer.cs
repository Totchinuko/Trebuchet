//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trebuchet.Assets {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.1.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Trebuchet.Assets.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        public static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add local mods.
        /// </summary>
        public static string AddLocalMod {
            get {
                return ResourceManager.GetString("AddLocalMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add to list.
        /// </summary>
        public static string AddToList {
            get {
                return ResourceManager.GetString("AddToList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Append.
        /// </summary>
        public static string Append {
            get {
                return ResourceManager.GetString("Append", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Scroll.
        /// </summary>
        public static string AutoScroll {
            get {
                return ResourceManager.GetString("AutoScroll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Battle Eye.
        /// </summary>
        public static string BattleEye {
            get {
                return ResourceManager.GetString("BattleEye", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelling.
        /// </summary>
        public static string Cancelling {
            get {
                return ResourceManager.GetString("Cancelling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti-Cheat.
        /// </summary>
        public static string CatAntiCheat {
            get {
                return ResourceManager.GetString("CatAntiCheat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string CatGeneral {
            get {
                return ResourceManager.GetString("CatGeneral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graphics.
        /// </summary>
        public static string CatGraphics {
            get {
                return ResourceManager.GetString("CatGraphics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Miscellaneous.
        /// </summary>
        public static string CatMiscellaneous {
            get {
                return ResourceManager.GetString("CatMiscellaneous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performance.
        /// </summary>
        public static string CatPerformance {
            get {
                return ResourceManager.GetString("CatPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ports.
        /// </summary>
        public static string CatPorts {
            get {
                return ResourceManager.GetString("CatPorts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process Performance.
        /// </summary>
        public static string CatProcessPerformance {
            get {
                return ResourceManager.GetString("CatProcessPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RCon.
        /// </summary>
        public static string CatRCon {
            get {
                return ResourceManager.GetString("CatRCon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart Settings.
        /// </summary>
        public static string CatRestartSettings {
            get {
                return ResourceManager.GetString("CatRestartSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Settings.
        /// </summary>
        public static string CatServerSettings {
            get {
                return ResourceManager.GetString("CatServerSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates.
        /// </summary>
        public static string CatUpdates {
            get {
                return ResourceManager.GetString("CatUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change.
        /// </summary>
        public static string Change {
            get {
                return ResourceManager.GetString("Change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear.
        /// </summary>
        public static string Clear {
            get {
                return ResourceManager.GetString("Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game failed to start.
        /// </summary>
        public static string ClientFailedToStart {
            get {
                return ResourceManager.GetString("ClientFailedToStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See the logs for more information.
        /// </summary>
        public static string ClientFailedToStartText {
            get {
                return ResourceManager.GetString("ClientFailedToStartText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        public static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect.
        /// </summary>
        public static string Connect {
            get {
                return ResourceManager.GetString("Connect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Corrupted.
        /// </summary>
        public static string Corrupted {
            get {
                return ResourceManager.GetString("Corrupted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CPU.
        /// </summary>
        public static string CPU_CentralProcessorUnit {
            get {
                return ResourceManager.GetString("CPU_CentralProcessorUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}%.
        /// </summary>
        public static string CpuFormat {
            get {
                return ResourceManager.GetString("CpuFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create.
        /// </summary>
        public static string Create {
            get {
                return ResourceManager.GetString("Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current location.
        /// </summary>
        public static string CurrentLocation {
            get {
                return ResourceManager.GetString("CurrentLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletion.
        /// </summary>
        public static string Deletion {
            get {
                return ResourceManager.GetString("Deletion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you wish to delete {0} ?.
        /// </summary>
        public static string DeletionText {
            get {
                return ResourceManager.GetString("DeletionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory does not exists.
        /// </summary>
        public static string DirectoryNotFound {
            get {
                return ResourceManager.GetString("DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop .pak files to add to your list.
        /// </summary>
        public static string DropPakLabel {
            get {
                return ResourceManager.GetString("DropPakLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate.
        /// </summary>
        public static string Duplicate {
            get {
                return ResourceManager.GetString("Duplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        public static string Edit {
            get {
                return ResourceManager.GetString("Edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This directory is invalid.
        /// </summary>
        public static string ErrorInvalidDirectory {
            get {
                return ResourceManager.GetString("ErrorInvalidDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This name is already taken.
        /// </summary>
        public static string ErrorNameAlreadyTaken {
            get {
                return ResourceManager.GetString("ErrorNameAlreadyTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name cannot be empty.
        /// </summary>
        public static string ErrorNameEmpty {
            get {
                return ResourceManager.GetString("ErrorNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This name contain invalid characters.
        /// </summary>
        public static string ErrorNameInvalidCharacters {
            get {
                return ResourceManager.GetString("ErrorNameInvalidCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value cannot be empty.
        /// </summary>
        public static string ErrorValueEmpty {
            get {
                return ResourceManager.GetString("ErrorValueEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit.
        /// </summary>
        public static string Exit {
            get {
                return ResourceManager.GetString("Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        public static string Export {
            get {
                return ResourceManager.GetString("Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some of the mods cannot be resolved because the mod file was not found. In order to export your modlist, please unsure that all of the mods are not marked as missing..
        /// </summary>
        public static string ExportErrorModNotFound {
            get {
                return ResourceManager.GetString("ExportErrorModNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export .json.
        /// </summary>
        public static string ExportJson {
            get {
                return ResourceManager.GetString("ExportJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export .txt.
        /// </summary>
        public static string ExportTxt {
            get {
                return ResourceManager.GetString("ExportTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Find.
        /// </summary>
        public static string Find {
            get {
                return ResourceManager.GetString("Find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found.
        /// </summary>
        public static string Found {
            get {
                return ResourceManager.GetString("Found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game.
        /// </summary>
        public static string Game {
            get {
                return ResourceManager.GetString("Game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Build.
        /// </summary>
        public static string GameBuild {
            get {
                return ResourceManager.GetString("GameBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game could not be found in this Directory.
        /// </summary>
        public static string GameDirectoryInvalidError {
            get {
                return ResourceManager.GetString("GameDirectoryInvalidError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Save.
        /// </summary>
        public static string GameSave {
            get {
                return ResourceManager.GetString("GameSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string Import {
            get {
                return ResourceManager.GetString("Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import mod list.
        /// </summary>
        public static string ImportModList {
            get {
                return ResourceManager.GetString("ImportModList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string ImportTxt {
            get {
                return ResourceManager.GetString("ImportTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Install {
            get {
                return ResourceManager.GetString("Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance.
        /// </summary>
        public static string Instance {
            get {
                return ResourceManager.GetString("Instance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory is invalid.
        /// </summary>
        public static string InvalidDirectory {
            get {
                return ResourceManager.GetString("InvalidDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Json.
        /// </summary>
        public static string InvalidJson {
            get {
                return ResourceManager.GetString("InvalidJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loaded json could not be parsed..
        /// </summary>
        public static string InvalidJsonText {
            get {
                return ResourceManager.GetString("InvalidJsonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid URL.
        /// </summary>
        public static string InvalidURL {
            get {
                return ResourceManager.GetString("InvalidURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The steam URL seems to be missing its ID to be valid..
        /// </summary>
        public static string InvalidURLText {
            get {
                return ResourceManager.GetString("InvalidURLText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill.
        /// </summary>
        public static string Kill {
            get {
                return ResourceManager.GetString("Kill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill all.
        /// </summary>
        public static string KillAll {
            get {
                return ResourceManager.GetString("KillAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Killing a process will trigger an abrupt ending of the program and can lead to Data loss and/or data corruption. Do you wish to continue ?.
        /// </summary>
        public static string KillText {
            get {
                return ResourceManager.GetString("KillText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Modified.
        /// </summary>
        public static string LastModified {
            get {
                return ResourceManager.GetString("LastModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Update.
        /// </summary>
        public static string LastUpdate {
            get {
                return ResourceManager.GetString("LastUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch.
        /// </summary>
        public static string Launch {
            get {
                return ResourceManager.GetString("Launch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch all.
        /// </summary>
        public static string LaunchAll {
            get {
                return ResourceManager.GetString("LaunchAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Live.
        /// </summary>
        public static string Live {
            get {
                return ResourceManager.GetString("Live", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Workshop (Live).
        /// </summary>
        public static string LiveMod {
            get {
                return ResourceManager.GetString("LiveMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading.
        /// </summary>
        public static string Loading {
            get {
                return ResourceManager.GetString("Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local File.
        /// </summary>
        public static string LocalMod {
            get {
                return ResourceManager.GetString("LocalMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory.
        /// </summary>
        public static string Memory {
            get {
                return ResourceManager.GetString("Memory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing.
        /// </summary>
        public static string Missing {
            get {
                return ResourceManager.GetString("Missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod List.
        /// </summary>
        public static string ModList {
            get {
                return ResourceManager.GetString("ModList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modlist Name.
        /// </summary>
        public static string ModlistName {
            get {
                return ResourceManager.GetString("ModlistName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override.
        /// </summary>
        public static string ModlistReplace {
            get {
                return ResourceManager.GetString("ModlistReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action will replace your mod list, do you wish to continue ?.
        /// </summary>
        public static string ModlistReplaceText {
            get {
                return ResourceManager.GetString("ModlistReplaceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List Size.
        /// </summary>
        public static string ModlistSize {
            get {
                return ResourceManager.GetString("ModlistSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The total size of the mods in your list. Missing mod use the size of the mod indicated in the workshop database. Missing local files count for zero..
        /// </summary>
        public static string ModlistSizeTip {
            get {
                return ResourceManager.GetString("ModlistSizeTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No results found.
        /// </summary>
        public static string NoResultFound {
            get {
                return ResourceManager.GetString("NoResultFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose which game save need to be copied back into the game files.
        /// </summary>
        public static string OnBoardingChooseGameSaveText {
            get {
                return ResourceManager.GetString("OnBoardingChooseGameSaveText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloaded data directory.
        /// </summary>
        public static string OnBoardingDataDirectory {
            get {
                return ResourceManager.GetString("OnBoardingDataDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This directory contain mods and server files downloaded by Trebuchet from the Steam Workshop. You can change its default location to a more suitable one.
        ///DO NOT place it in your Steam Directory..
        /// </summary>
        public static string OnBoardingDataDirectorySub {
            get {
                return ResourceManager.GetString("OnBoardingDataDirectorySub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Save.
        /// </summary>
        public static string OnBoardingGameSave {
            get {
                return ResourceManager.GetString("OnBoardingGameSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string OnBoardingLanguageChange {
            get {
                return ResourceManager.GetString("OnBoardingLanguageChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The language has been changed, but a restart is required to apply the change. Restart ?.
        /// </summary>
        public static string OnBoardingLanguageChangeConfirm {
            get {
                return ResourceManager.GetString("OnBoardingLanguageChangeConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The language has been changed but some tasks are currently running. To apply the change, please restart Trebuchet when the tasks are over..
        /// </summary>
        public static string OnBoardingLanguageChangeMessage {
            get {
                return ResourceManager.GetString("OnBoardingLanguageChangeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locate Conan Exiles.
        /// </summary>
        public static string OnBoardingLocateConan {
            get {
                return ResourceManager.GetString("OnBoardingLocateConan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder selected does not contain Conan Exiles.
        /// </summary>
        public static string OnBoardingLocateConanError {
            get {
                return ResourceManager.GetString("OnBoardingLocateConanError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicate to Trebuchet where to find your Conan Exile game.
        /// </summary>
        public static string OnBoardingLocateConanText {
            get {
                return ResourceManager.GetString("OnBoardingLocateConanText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Files Management.
        /// </summary>
        public static string OnBoardingManageConan {
            get {
                return ResourceManager.GetString("OnBoardingManageConan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leave Game Untouched.
        /// </summary>
        public static string OnBoardingManageConanNo {
            get {
                return ResourceManager.GetString("OnBoardingManageConanNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your files will remain in the Saved directory.
        /// </summary>
        public static string OnBoardingManageConanNoSub {
            get {
                return ResourceManager.GetString("OnBoardingManageConanNoSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Trebuchet to handle your game files? If so, Trebuchet will move your game files located in the Saved folder, into your MyDocuments directory. This will allow two things:
        /// (a) To be able to create as many saves as you wish, and start the game using any of them
        /// (b) To offer extra settings for the game through Trebuchet.
        /// </summary>
        public static string OnBoardingManageConanText {
            get {
                return ResourceManager.GetString("OnBoardingManageConanText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To apply your choice, Trebuchet need permission to write into your game directory.
        /// </summary>
        public static string OnBoardingManageConanUac {
            get {
                return ResourceManager.GetString("OnBoardingManageConanUac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Game Management.
        /// </summary>
        public static string OnBoardingManageConanYes {
            get {
                return ResourceManager.GetString("OnBoardingManageConanYes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files will be moved to MyDocuments.
        /// </summary>
        public static string OnBoardingManageConanYesSub {
            get {
                return ResourceManager.GetString("OnBoardingManageConanYesSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod Trimming.
        /// </summary>
        public static string OnBoardingModTrimConfirm {
            get {
                return ResourceManager.GetString("OnBoardingModTrimConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} unused mods have been found, delete ?.
        /// </summary>
        public static string OnBoardingModTrimConfirmSub {
            get {
                return ResourceManager.GetString("OnBoardingModTrimConfirmSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose a name for the new trebuchet save that will contain your files.
        /// </summary>
        public static string OnBoardingNewGameSave {
            get {
                return ResourceManager.GetString("OnBoardingNewGameSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No unused mods.
        /// </summary>
        public static string OnBoardingNoUnusedMods {
            get {
                return ResourceManager.GetString("OnBoardingNoUnusedMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no unused mods to trim.
        /// </summary>
        public static string OnBoardingNoUnusedModsSub {
            get {
                return ResourceManager.GetString("OnBoardingNoUnusedModsSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File opened in another process.
        /// </summary>
        public static string OnBoardingProcessLock {
            get {
                return ResourceManager.GetString("OnBoardingProcessLock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following file is currently busy with another process, please close the program so Trebuchet can continue its task:
        ///{0}.
        /// </summary>
        public static string OnBoardingProcessLockSub {
            get {
                return ResourceManager.GetString("OnBoardingProcessLockSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart Requiried.
        /// </summary>
        public static string OnBoardingRestartProcess {
            get {
                return ResourceManager.GetString("OnBoardingRestartProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A settings that need a restart was change, restart ?.
        /// </summary>
        public static string OnBoardingRestartProcessSub {
            get {
                return ResourceManager.GetString("OnBoardingRestartProcessSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A setting that need a restart has changed, but some tasks are still on going. Please restart Trebuchet once all the tasks are completed..
        /// </summary>
        public static string OnBoardingRestartProcessSubMessage {
            get {
                return ResourceManager.GetString("OnBoardingRestartProcessSubMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Instances.
        /// </summary>
        public static string OnBoardingServerInstanceCount {
            get {
                return ResourceManager.GetString("OnBoardingServerInstanceCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose how many server instance Trebuchet should manage. Unless you want to handle a cluster, one should be enough..
        /// </summary>
        public static string OnBoardingServerInstanceCountSub {
            get {
                return ResourceManager.GetString("OnBoardingServerInstanceCountSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam is not running.
        /// </summary>
        public static string OnBoardingSteamClientOffline {
            get {
                return ResourceManager.GetString("OnBoardingSteamClientOffline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Steam client is not currently running, Conan Exiles require your to be logged in to Steam to play online..
        /// </summary>
        public static string OnBoardingSteamClientOfflineSub {
            get {
                return ResourceManager.GetString("OnBoardingSteamClientOfflineSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trebuchet Update ({0}).
        /// </summary>
        public static string OnBoardingUpdate {
            get {
                return ResourceManager.GetString("OnBoardingUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A more recent version of trebuchet has been found, would like to download and install it ?.
        /// </summary>
        public static string OnBoardingUpdateSub {
            get {
                return ResourceManager.GetString("OnBoardingUpdateSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A previous installation of Trebuchet has been detected and must be upgraded to function with this version. Once this task is over, previous version of Trebuchet will not work anymore. 
        ///Do you wish to proceed ?.
        /// </summary>
        public static string OnBoardingUpgrade {
            get {
                return ResourceManager.GetString("OnBoardingUpgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait while your files are being copied.
        /// </summary>
        public static string OnBoardingUpgradeCopy {
            get {
                return ResourceManager.GetString("OnBoardingUpgradeCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you do not wish to upgrade now, please close Trebuchet..
        /// </summary>
        public static string OnBoardingUpgradeSub {
            get {
                return ResourceManager.GetString("OnBoardingUpgradeSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to upgrade your installation of Trebuchet, Write permission are needed. 
        ///With your permission, Trebuchet will restart and request administrative privileges..
        /// </summary>
        public static string OnBoardingUpgradeUac {
            get {
                return ResourceManager.GetString("OnBoardingUpgradeUac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trebuchet&apos;s Features.
        /// </summary>
        public static string OnBoardingUsageChoice {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modding.
        /// </summary>
        public static string OnBoardingUsageChoiceModder {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoiceModder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will enable both server and game features for mod testing.
        /// </summary>
        public static string OnBoardingUsageChoiceModderSub {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoiceModderSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play Conan Exiles.
        /// </summary>
        public static string OnBoardingUsageChoicePlayer {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoicePlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will disable Trebuchet&apos;s server features.
        /// </summary>
        public static string OnBoardingUsageChoicePlayerSub {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoicePlayerSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Servers.
        /// </summary>
        public static string OnBoardingUsageChoiceServer {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoiceServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will disable Trebuchet&apos;s game features.
        /// </summary>
        public static string OnBoardingUsageChoiceServerSub {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoiceServerSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select what usage to intend to make of Trebuchet. This will preconfigure the app with base settings that you can change later if you change your mind..
        /// </summary>
        public static string OnBoardingUsageChoiceText {
            get {
                return ResourceManager.GetString("OnBoardingUsageChoiceText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        public static string Open {
            get {
                return ResourceManager.GetString("Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open save folder.
        /// </summary>
        public static string OpenSaveFolder {
            get {
                return ResourceManager.GetString("OpenSaveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Workshop Page.
        /// </summary>
        public static string OpenWorkshopPage {
            get {
                return ResourceManager.GetString("OpenWorkshopPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Connections.
        /// </summary>
        public static string PanelClientConnections {
            get {
                return ResourceManager.GetString("PanelClientConnections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dashboard.
        /// </summary>
        public static string PanelDashboard {
            get {
                return ResourceManager.GetString("PanelDashboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Saves.
        /// </summary>
        public static string PanelGameSaves {
            get {
                return ResourceManager.GetString("PanelGameSaves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods.
        /// </summary>
        public static string PanelMods {
            get {
                return ResourceManager.GetString("PanelMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Consoles.
        /// </summary>
        public static string PanelServerConsoles {
            get {
                return ResourceManager.GetString("PanelServerConsoles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Log Filters.
        /// </summary>
        public static string PanelServerLogFilter {
            get {
                return ResourceManager.GetString("PanelServerLogFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Saves.
        /// </summary>
        public static string PanelServerSaves {
            get {
                return ResourceManager.GetString("PanelServerSaves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string PanelSettings {
            get {
                return ResourceManager.GetString("PanelSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronize.
        /// </summary>
        public static string PanelSync {
            get {
                return ResourceManager.GetString("PanelSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toolbox.
        /// </summary>
        public static string PanelToolbox {
            get {
                return ResourceManager.GetString("PanelToolbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste.
        /// </summary>
        public static string PasteTxt {
            get {
                return ResourceManager.GetString("PasteTxt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Peak.
        /// </summary>
        public static string Peak {
            get {
                return ResourceManager.GetString("Peak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PID.
        /// </summary>
        public static string PID_ProcessID {
            get {
                return ResourceManager.GetString("PID_ProcessID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Players.
        /// </summary>
        public static string Players {
            get {
                return ResourceManager.GetString("Players", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        public static string Refresh {
            get {
                return ResourceManager.GetString("Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh mods data.
        /// </summary>
        public static string RefreshModInfos {
            get {
                return ResourceManager.GetString("RefreshModInfos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from list.
        /// </summary>
        public static string RemoveFromList {
            get {
                return ResourceManager.GetString("RemoveFromList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename.
        /// </summary>
        public static string Rename {
            get {
                return ResourceManager.GetString("Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        public static string Reset {
            get {
                return ResourceManager.GetString("Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save As.
        /// </summary>
        public static string SaveAs {
            get {
                return ResourceManager.GetString("SaveAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save File.
        /// </summary>
        public static string SaveFile {
            get {
                return ResourceManager.GetString("SaveFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Size.
        /// </summary>
        public static string SaveSize {
            get {
                return ResourceManager.GetString("SaveSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total size of your save on disk. Saves not only store your settings, but also your server saves and logs.
        /// </summary>
        public static string SaveSizeTip {
            get {
                return ResourceManager.GetString("SaveSizeTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server failed to start.
        /// </summary>
        public static string ServerFailedStart {
            get {
                return ResourceManager.GetString("ServerFailedStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server failed to start properly. See the logs for more information..
        /// </summary>
        public static string ServerFailedStartText {
            get {
                return ResourceManager.GetString("ServerFailedStartText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Logs.
        /// </summary>
        public static string ServerLogs {
            get {
                return ResourceManager.GetString("ServerLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Servers.
        /// </summary>
        public static string Servers {
            get {
                return ResourceManager.GetString("Servers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Save.
        /// </summary>
        public static string ServerSave {
            get {
                return ResourceManager.GetString("ServerSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Tot ! Admin] Do not load server list.
        /// </summary>
        public static string SettingAdminServerList {
            get {
                return ResourceManager.GetString("SettingAdminServerList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent the sever list from auto refreshing from the main menu.
        /// </summary>
        public static string SettingAdminServerListText {
            get {
                return ResourceManager.GetString("SettingAdminServerListText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Async Scene.
        /// </summary>
        public static string SettingAsyncScene {
            get {
                return ResourceManager.GetString("SettingAsyncScene", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can improve performance, specially around heavy building areas.
        /// </summary>
        public static string SettingAsyncSceneText {
            get {
                return ResourceManager.GetString("SettingAsyncSceneText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Refresh Mod List.
        /// </summary>
        public static string SettingAutoRefreshModlist {
            get {
                return ResourceManager.GetString("SettingAutoRefreshModlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh the mod lists every couple of minutes to check if their is any mod update pending.
        /// </summary>
        public static string SettingAutoRefreshModlistText {
            get {
                return ResourceManager.GetString("SettingAutoRefreshModlistText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Server Instances.
        /// </summary>
        public static string SettingAutoUpdateStatus {
            get {
                return ResourceManager.GetString("SettingAutoUpdateStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for updates.
        /// </summary>
        public static string SettingAutoUpdateStatusCheck {
            get {
                return ResourceManager.GetString("SettingAutoUpdateStatusCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only on launch.
        /// </summary>
        public static string SettingAutoUpdateStatusLaunchOnly {
            get {
                return ResourceManager.GetString("SettingAutoUpdateStatusLaunchOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never.
        /// </summary>
        public static string SettingAutoUpdateStatusNever {
            get {
                return ResourceManager.GetString("SettingAutoUpdateStatusNever", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose when to update your servers. This does not apply to client game.
        /// </summary>
        public static string SettingAutoUpdateStatusText {
            get {
                return ResourceManager.GetString("SettingAutoUpdateStatusText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background Sound.
        /// </summary>
        public static string SettingBackgroundSound {
            get {
                return ResourceManager.GetString("SettingBackgroundSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep the sound of the game up when tabbing out to another window.
        /// </summary>
        public static string SettingBackgroundSoundText {
            get {
                return ResourceManager.GetString("SettingBackgroundSoundText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conan Exile Installation Folder.
        /// </summary>
        public static string SettingClientInstallation {
            get {
                return ResourceManager.GetString("SettingClientInstallation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicate to Trebuchet where to find your Conan Exile game installation folder. You&apos;ll also be choosing if Trebuchet should handle your game files or not..
        /// </summary>
        public static string SettingClientInstallationText {
            get {
                return ResourceManager.GetString("SettingClientInstallationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CPU Thread Affinity.
        /// </summary>
        public static string SettingCpuAffinity {
            get {
                return ResourceManager.GetString("SettingCpuAffinity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CPU Thread Affinity help to assign specific cores to the server process.
        /// </summary>
        public static string SettingCpuAffinityText {
            get {
                return ResourceManager.GetString("SettingCpuAffinityText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Warning On Kill.
        /// </summary>
        public static string SettingDisplayWarningOnKill {
            get {
                return ResourceManager.GetString("SettingDisplayWarningOnKill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click on a Kill button will display first a warning about data loss and corruption.
        /// </summary>
        public static string SettingDisplayWarningOnKillText {
            get {
                return ResourceManager.GetString("SettingDisplayWarningOnKillText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experiments.
        /// </summary>
        public static string SettingExperiments {
            get {
                return ResourceManager.GetString("SettingExperiments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable the experimental features of Trebuchet, which are not always stable or even finished at all..
        /// </summary>
        public static string SettingExperimentsText {
            get {
                return ResourceManager.GetString("SettingExperimentsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured Internet Speed.
        /// </summary>
        public static string SettingInternetSpeed {
            get {
                return ResourceManager.GetString("SettingInternetSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max connection speed of the engine. This is untested..
        /// </summary>
        public static string SettingInternetSpeedText {
            get {
                return ResourceManager.GetString("SettingInternetSpeedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Intro Videos.
        /// </summary>
        public static string SettingIntroVid {
            get {
                return ResourceManager.GetString("SettingIntroVid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instead of displaying the intro video, you will have black screen that will swap to the main menu once the game is loaded.
        /// </summary>
        public static string SettingIntroVidText {
            get {
                return ResourceManager.GetString("SettingIntroVidText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Log Console.
        /// </summary>
        public static string SettingLog {
            get {
                return ResourceManager.GetString("SettingLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log Filters.
        /// </summary>
        public static string SettingLogFilter {
            get {
                return ResourceManager.GetString("SettingLogFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter the logs to only display specific types of logs (One per line). This can greatly help to reduce your log size. Log levels are NoLogging, Fatal, Error, Warning, Display, Log, Verbose, VeryVerbose, All (=VeryVerbose).
        /// </summary>
        public static string SettingLogFilterText {
            get {
                return ResourceManager.GetString("SettingLogFilterText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display live game logs as the game is running.
        /// </summary>
        public static string SettingLogText {
            get {
                return ResourceManager.GetString("SettingLogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage Game Files.
        /// </summary>
        public static string SettingManageClient {
            get {
                return ResourceManager.GetString("SettingManageClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Simultaneous Downloads.
        /// </summary>
        public static string SettingMaxDownloads {
            get {
                return ResourceManager.GetString("SettingMaxDownloads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max amount of files downloaded at the same time on the steam network. This can increase the load on your CPU/Drive but make the download potentially faster if your network allow it.
        /// </summary>
        public static string SettingMaxDownloadsText {
            get {
                return ResourceManager.GetString("SettingMaxDownloadsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Download Servers.
        /// </summary>
        public static string SettingMaxServers {
            get {
                return ResourceManager.GetString("SettingMaxServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max amount of content server used at the same time on the steam network.
        /// </summary>
        public static string SettingMaxServersText {
            get {
                return ResourceManager.GetString("SettingMaxServersText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Theme.
        /// </summary>
        public static string SettingPlateformTheme {
            get {
                return ResourceManager.GetString("SettingPlateformTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark.
        /// </summary>
        public static string SettingPlateformThemeDark {
            get {
                return ResourceManager.GetString("SettingPlateformThemeDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operating System.
        /// </summary>
        public static string SettingPlateformThemeDefault {
            get {
                return ResourceManager.GetString("SettingPlateformThemeDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light.
        /// </summary>
        public static string SettingPlateformThemeLight {
            get {
                return ResourceManager.GetString("SettingPlateformThemeLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose between Dark and Light theme.
        /// </summary>
        public static string SettingPlateformThemeText {
            get {
                return ResourceManager.GetString("SettingPlateformThemeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process Priority.
        /// </summary>
        public static string SettingProcessPrio {
            get {
                return ResourceManager.GetString("SettingProcessPrio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Above Normal.
        /// </summary>
        public static string SettingProcessPrioAboveNormal {
            get {
                return ResourceManager.GetString("SettingProcessPrioAboveNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to High.
        /// </summary>
        public static string SettingProcessPrioHigh {
            get {
                return ResourceManager.GetString("SettingProcessPrioHigh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normal.
        /// </summary>
        public static string SettingProcessPrioNormal {
            get {
                return ResourceManager.GetString("SettingProcessPrioNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Realtime (Not Recommanded).
        /// </summary>
        public static string SettingProcessPrioRealtime {
            get {
                return ResourceManager.GetString("SettingProcessPrioRealtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process priority of your server instance. Higher might make your server more responsive but at the cost of other OS processes responsiveness.
        /// </summary>
        public static string SettingProcessPrioText {
            get {
                return ResourceManager.GetString("SettingProcessPrioText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Admin Password.
        /// </summary>
        public static string SettingServerAdminPass {
            get {
                return ResourceManager.GetString("SettingServerAdminPass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Admin password of your server instance.
        /// </summary>
        public static string SettingServerAdminPassText {
            get {
                return ResourceManager.GetString("SettingServerAdminPassText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CPU Thread Affinity.
        /// </summary>
        public static string SettingServerCPUThreadAffinity {
            get {
                return ResourceManager.GetString("SettingServerCPUThreadAffinity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CPU Thread Affinity help to assign specific cores to the server process.
        /// </summary>
        public static string SettingServerCPUThreadAffinityText {
            get {
                return ResourceManager.GetString("SettingServerCPUThreadAffinityText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart Servers When Down.
        /// </summary>
        public static string SettingServerCrashRestart {
            get {
                return ResourceManager.GetString("SettingServerCrashRestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically restart a server instance that have stopped unexpectedly.
        /// </summary>
        public static string SettingServerCrashRestartText {
            get {
                return ResourceManager.GetString("SettingServerCrashRestartText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Battle Eye.
        /// </summary>
        public static string SettingServerEnableBattleEye {
            get {
                return ResourceManager.GetString("SettingServerEnableBattleEye", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Battle Eye Anti-Cheat on your server instance.
        /// </summary>
        public static string SettingServerEnableBattleEyeText {
            get {
                return ResourceManager.GetString("SettingServerEnableBattleEyeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Multi Home.
        /// </summary>
        public static string SettingServerEnableMultiHome {
            get {
                return ResourceManager.GetString("SettingServerEnableMultiHome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Multi Home to allow multiple to have serveur IP to connect to.
        /// </summary>
        public static string SettingServerEnableMultiHomeText {
            get {
                return ResourceManager.GetString("SettingServerEnableMultiHomeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable RCon.
        /// </summary>
        public static string SettingServerEnableRCon {
            get {
                return ResourceManager.GetString("SettingServerEnableRCon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable RCON console on your server instance.
        /// </summary>
        public static string SettingServerEnableRConText {
            get {
                return ResourceManager.GetString("SettingServerEnableRConText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Valve Anti Cheat.
        /// </summary>
        public static string SettingServerEnableVAC {
            get {
                return ResourceManager.GetString("SettingServerEnableVAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Valve Anti Cheat on your server instance.
        /// </summary>
        public static string SettingServerEnableVACText {
            get {
                return ResourceManager.GetString("SettingServerEnableVACText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Client Port.
        /// </summary>
        public static string SettingServerGameClientPort {
            get {
                return ResourceManager.GetString("SettingServerGameClientPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port used by the game client to connect to your server instance.
        /// </summary>
        public static string SettingServerGameClientPortText {
            get {
                return ResourceManager.GetString("SettingServerGameClientPortText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Instance Amount.
        /// </summary>
        public static string SettingServerInstanceCount {
            get {
                return ResourceManager.GetString("SettingServerInstanceCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The amount of server instance to be handled by this trebuchet. Leave it at 0 if you do not wish trebuchet to handle server launch.
        /// </summary>
        public static string SettingServerInstanceCountText {
            get {
                return ResourceManager.GetString("SettingServerInstanceCountText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill Crashed Servers.
        /// </summary>
        public static string SettingServerKillZombies {
            get {
                return ResourceManager.GetString("SettingServerKillZombies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kill server instances that have stopped responding (frozen) for a period of time.
        /// </summary>
        public static string SettingServerKillZombiesText {
            get {
                return ResourceManager.GetString("SettingServerKillZombiesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Log Console.
        /// </summary>
        public static string SettingServerLog {
            get {
                return ResourceManager.GetString("SettingServerLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log Filters.
        /// </summary>
        public static string SettingServerLogFilters {
            get {
                return ResourceManager.GetString("SettingServerLogFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter the log console to only display specific types of logs (One per line). This can greatly help to reduce your log size. Log levels are NoLogging, Fatal, Error, Warning, Display, Log, Verbose, VeryVerbose, All (=VeryVerbose).
        /// </summary>
        public static string SettingServerLogFiltersText {
            get {
                return ResourceManager.GetString("SettingServerLogFiltersText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display server live logs instead of a blank window. WARNING: This might render the zombie process detection ineffective. I don&apos;t advise using this on a production server.
        /// </summary>
        public static string SettingServerLogText {
            get {
                return ResourceManager.GetString("SettingServerLogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Map.
        /// </summary>
        public static string SettingServerMap {
            get {
                return ResourceManager.GetString("SettingServerMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting path of the map you want to load on your server intance. The button contain a few known map path for easier setup.
        /// </summary>
        public static string SettingServerMapText {
            get {
                return ResourceManager.GetString("SettingServerMapText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Tick Rate.
        /// </summary>
        public static string SettingServerMaximumTickRate {
            get {
                return ResourceManager.GetString("SettingServerMaximumTickRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum tick rate of your server instance.
        /// </summary>
        public static string SettingServerMaximumTickRateText {
            get {
                return ResourceManager.GetString("SettingServerMaximumTickRateText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Player Count.
        /// </summary>
        public static string SettingServerMaxPlayer {
            get {
                return ResourceManager.GetString("SettingServerMaxPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum authorized amount of playes on your server instance.
        /// </summary>
        public static string SettingServerMaxPlayerText {
            get {
                return ResourceManager.GetString("SettingServerMaxPlayerText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multi Home Address.
        /// </summary>
        public static string SettingServerMultiHomeAddress {
            get {
                return ResourceManager.GetString("SettingServerMultiHomeAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP address to be used by Multi Home. Usually your local IP.
        /// </summary>
        public static string SettingServerMultiHomeAddressText {
            get {
                return ResourceManager.GetString("SettingServerMultiHomeAddressText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Name.
        /// </summary>
        public static string SettingServerName {
            get {
                return ResourceManager.GetString("SettingServerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of your server instance in the game server list.
        /// </summary>
        public static string SettingServerNameText {
            get {
                return ResourceManager.GetString("SettingServerNameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No AI Spawn.
        /// </summary>
        public static string SettingServerNoAISpawn {
            get {
                return ResourceManager.GetString("SettingServerNoAISpawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prevent the spawn of common map NPC. Some categories of NPC are not affected by this, like the Siptha vaults.
        /// </summary>
        public static string SettingServerNoAISpawnText {
            get {
                return ResourceManager.GetString("SettingServerNoAISpawnText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Password.
        /// </summary>
        public static string SettingServerPass {
            get {
                return ResourceManager.GetString("SettingServerPass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password of your server instance.
        /// </summary>
        public static string SettingServerPassText {
            get {
                return ResourceManager.GetString("SettingServerPassText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process Priority.
        /// </summary>
        public static string SettingServerProcessPriority {
            get {
                return ResourceManager.GetString("SettingServerProcessPriority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process priority of your server instance. Higher might make your server more responsive but at the cost of other OS processes responsiveness.
        /// </summary>
        public static string SettingServerProcessPriorityText {
            get {
                return ResourceManager.GetString("SettingServerProcessPriorityText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Raw UDP Port.
        /// </summary>
        public static string SettingServerRawUDPPort {
            get {
                return ResourceManager.GetString("SettingServerRawUDPPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secondary UDP port.
        /// </summary>
        public static string SettingServerRawUDPPortText {
            get {
                return ResourceManager.GetString("SettingServerRawUDPPortText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RCon Max Karma.
        /// </summary>
        public static string SettingServerRConMaxKarma {
            get {
                return ResourceManager.GetString("SettingServerRConMaxKarma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum karma value for RCon.
        /// </summary>
        public static string SettingServerRConMaxKarmaText {
            get {
                return ResourceManager.GetString("SettingServerRConMaxKarmaText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RCon Password.
        /// </summary>
        public static string SettingServerRConPassword {
            get {
                return ResourceManager.GetString("SettingServerRConPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password used by RCon.
        /// </summary>
        public static string SettingServerRConPasswordText {
            get {
                return ResourceManager.GetString("SettingServerRConPasswordText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RCon Port.
        /// </summary>
        public static string SettingServerRConPort {
            get {
                return ResourceManager.GetString("SettingServerRConPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port used by RCon.
        /// </summary>
        public static string SettingServerRConPortText {
            get {
                return ResourceManager.GetString("SettingServerRConPortText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Region.
        /// </summary>
        public static string SettingServerRegion {
            get {
                return ResourceManager.GetString("SettingServerRegion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Asia.
        /// </summary>
        public static string SettingServerRegionAsia {
            get {
                return ResourceManager.GetString("SettingServerRegionAsia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Australia.
        /// </summary>
        public static string SettingServerRegionAustralia {
            get {
                return ResourceManager.GetString("SettingServerRegionAustralia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Europe.
        /// </summary>
        public static string SettingServerRegionEurope {
            get {
                return ResourceManager.GetString("SettingServerRegionEurope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Japan.
        /// </summary>
        public static string SettingServerRegionJapan {
            get {
                return ResourceManager.GetString("SettingServerRegionJapan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to North America.
        /// </summary>
        public static string SettingServerRegionNorthAmerica {
            get {
                return ResourceManager.GetString("SettingServerRegionNorthAmerica", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to South America.
        /// </summary>
        public static string SettingServerRegionSouthAmerica {
            get {
                return ResourceManager.GetString("SettingServerRegionSouthAmerica", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server region to be displayed in the server browser.
        /// </summary>
        public static string SettingServerRegionText {
            get {
                return ResourceManager.GetString("SettingServerRegionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source Query Port.
        /// </summary>
        public static string SettingServerSourceQueryPort {
            get {
                return ResourceManager.GetString("SettingServerSourceQueryPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port used by the server browser to query your server instance.
        /// </summary>
        public static string SettingServerSourceQueryPortText {
            get {
                return ResourceManager.GetString("SettingServerSourceQueryPortText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use All Cores.
        /// </summary>
        public static string SettingServerUseAllCores {
            get {
                return ResourceManager.GetString("SettingServerUseAllCores", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supposed to improve performance on machines with lots of cores, unverified. Probably black magic.
        /// </summary>
        public static string SettingServerUseAllCoresText {
            get {
                return ResourceManager.GetString("SettingServerUseAllCoresText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crash Check Duration (Seconds).
        /// </summary>
        public static string SettingServerZombieDuration {
            get {
                return ResourceManager.GetString("SettingServerZombieDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of time given to a server instance to respond before getting killed by trebuchet.
        /// </summary>
        public static string SettingServerZombieDurationText {
            get {
                return ResourceManager.GetString("SettingServerZombieDurationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sudo Super Admin List.
        /// </summary>
        public static string SettingSudoAdminList {
            get {
                return ResourceManager.GetString("SettingSudoAdminList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of steam ID to be Sudo super admins on your servers, one per line. Leave it empty if you do not use Sudo..
        /// </summary>
        public static string SettingSudoAdminListText {
            get {
                return ResourceManager.GetString("SettingSudoAdminListText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extra Texture Streaming Pool on Ultra (MB).
        /// </summary>
        public static string SettingTexPool {
            get {
                return ResourceManager.GetString("SettingTexPool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to not saturate your GPU memory with textures, the game constantly swap textures it does not need for the ones it needs. For that it reserve a portion of your memory to swap things out. By default on Ultra, that pool is 1500 MB in size. It&apos;s fine for the vanilla game, but with modded games it can be short when you are in an intensive area with lots of decorations, showing blurry textures more often. You can increase the base 1500 with this slider. Keep in mind that adding too much could have perfor [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SettingTexPoolText {
            get {
                return ResourceManager.GetString("SettingTexPoolText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Tot!Admin High Precision Move Tool.
        /// </summary>
        public static string SettingTotAdminPrecision {
            get {
                return ResourceManager.GetString("SettingTotAdminPrecision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For better compatibility with other move tools, disable two decimal scaling of Tot!Admin Move Tool.
        /// </summary>
        public static string SettingTotAdminPrecisionText {
            get {
                return ResourceManager.GetString("SettingTotAdminPrecisionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Better Textures on Ultra.
        /// </summary>
        public static string SettingUltraAniso {
            get {
                return ResourceManager.GetString("SettingUltraAniso", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increase the sharpness of angled textures on Ultra settings. This can have a performance hit depending on your hardware.
        /// </summary>
        public static string SettingUltraAnisoText {
            get {
                return ResourceManager.GetString("SettingUltraAnisoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Check Interval.
        /// </summary>
        public static string SettingUpdateCheckInterval {
            get {
                return ResourceManager.GetString("SettingUpdateCheckInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The interval in seconds between each update check.
        /// </summary>
        public static string SettingUpdateCheckIntervalText {
            get {
                return ResourceManager.GetString("SettingUpdateCheckIntervalText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use All Cores.
        /// </summary>
        public static string SettingUseAllCore {
            get {
                return ResourceManager.GetString("SettingUseAllCore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supposed to improve performance on machines with lots of cores, unverified. Probably black magic.
        /// </summary>
        public static string SettingUseAllCoreText {
            get {
                return ResourceManager.GetString("SettingUseAllCoreText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always Verify Files.
        /// </summary>
        public static string SettingVerifyAll {
            get {
                return ResourceManager.GetString("SettingVerifyAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When checking for updated files, the system will check its cached data to quickly check if they need to be redownloaded again. By checking this option, you force the system to inspect the files every time. This will make the process of checking for updates much more slow but is usefull to detect corruption. If you suspect corruption, I advise to use the button on the dashboard instead of turning on this setting.
        /// </summary>
        public static string SettingVerifyAllText {
            get {
                return ResourceManager.GetString("SettingVerifyAllText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status.
        /// </summary>
        public static string Status {
            get {
                return ResourceManager.GetString("Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crashed.
        /// </summary>
        public static string StatusCrashed {
            get {
                return ResourceManager.GetString("StatusCrashed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed.
        /// </summary>
        public static string StatusFailed {
            get {
                return ResourceManager.GetString("StatusFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not responding.
        /// </summary>
        public static string StatusFrozen {
            get {
                return ResourceManager.GetString("StatusFrozen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting.
        /// </summary>
        public static string StatusNew {
            get {
                return ResourceManager.GetString("StatusNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Online.
        /// </summary>
        public static string StatusOnline {
            get {
                return ResourceManager.GetString("StatusOnline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running.
        /// </summary>
        public static string StatusRunning {
            get {
                return ResourceManager.GetString("StatusRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopped.
        /// </summary>
        public static string StatusStopped {
            get {
                return ResourceManager.GetString("StatusStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stopping.
        /// </summary>
        public static string StatusStopping {
            get {
                return ResourceManager.GetString("StatusStopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connected to Steam.
        /// </summary>
        public static string SteamConnected {
            get {
                return ResourceManager.GetString("SteamConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam is unavailable.
        /// </summary>
        public static string SteamDisconnected {
            get {
                return ResourceManager.GetString("SteamDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop.
        /// </summary>
        public static string Stop {
            get {
                return ResourceManager.GetString("Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop all.
        /// </summary>
        public static string StopAll {
            get {
                return ResourceManager.GetString("StopAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subscriptions.
        /// </summary>
        public static string Subscriptions {
            get {
                return ResourceManager.GetString("Subscriptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync.
        /// </summary>
        public static string Sync {
            get {
                return ResourceManager.GetString("Sync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Synchronize your mod list with either a Steam collection or a compatible Json file (Exported from Trebuchet). This will replace your list..
        /// </summary>
        public static string SyncText {
            get {
                return ResourceManager.GetString("SyncText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Live.
        /// </summary>
        public static string TestLive {
            get {
                return ResourceManager.GetString("TestLive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Workshop (TestLive).
        /// </summary>
        public static string TestLiveMod {
            get {
                return ResourceManager.GetString("TestLiveMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Auto Connect Information. Add the IP, port and password, in order to launch and connect automatically. (Optional).
        /// </summary>
        public static string TooltipServerAutoConnect {
            get {
                return ResourceManager.GetString("TooltipServerAutoConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Translation Authors.
        /// </summary>
        public static string TranslationAuthors {
            get {
                return ResourceManager.GetString("TranslationAuthors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Totchinuko.
        /// </summary>
        public static string TranslatorsIdentity {
            get {
                return ResourceManager.GetString("TranslatorsIdentity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trebuchet Logs.
        /// </summary>
        public static string TrebuchetLogs {
            get {
                return ResourceManager.GetString("TrebuchetLogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trimming unused mods.
        /// </summary>
        public static string TrimmingUnusedMods {
            get {
                return ResourceManager.GetString("TrimmingUnusedMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trim unused mods.
        /// </summary>
        public static string TrimUnusedMods {
            get {
                return ResourceManager.GetString("TrimUnusedMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Their is {0} unused mods. Unused mods are mods that have been downloaded by Trebuchet in the past but are not anymore used in a mod lists.
        /// </summary>
        public static string TrimUnusedModsSub {
            get {
                return ResourceManager.GetString("TrimUnusedModsSub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write Permission.
        /// </summary>
        public static string UACDialog {
            get {
                return ResourceManager.GetString("UACDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trebuchet require administrative rights in order to handle protected files for the following reason(s):.
        /// </summary>
        public static string UACDialogText {
            get {
                return ResourceManager.GetString("UACDialogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unavailable.
        /// </summary>
        public static string Unavailable {
            get {
                return ResourceManager.GetString("Unavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Workshop Mod. This can happen if the mod has been deleted or hidden on the workshop.
        /// </summary>
        public static string UnknownMod {
            get {
                return ResourceManager.GetString("UnknownMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Untitled.
        /// </summary>
        public static string Untitled {
            get {
                return ResourceManager.GetString("Untitled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        public static string Update {
            get {
                return ResourceManager.GetString("Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update all mods.
        /// </summary>
        public static string UpdateAllMods {
            get {
                return ResourceManager.GetString("UpdateAllMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Available.
        /// </summary>
        public static string UpdateAvailable {
            get {
                return ResourceManager.GetString("UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Mods.
        /// </summary>
        public static string UpdateMods {
            get {
                return ResourceManager.GetString("UpdateMods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating mods.
        /// </summary>
        public static string UpdateModsLabel {
            get {
                return ResourceManager.GetString("UpdateModsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update servers.
        /// </summary>
        public static string UpdateServers {
            get {
                return ResourceManager.GetString("UpdateServers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating servers.
        /// </summary>
        public static string UpdateServersLabel {
            get {
                return ResourceManager.GetString("UpdateServersLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade.
        /// </summary>
        public static string Upgrade {
            get {
                return ResourceManager.GetString("Upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uptime.
        /// </summary>
        public static string Uptime {
            get {
                return ResourceManager.GetString("Uptime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up to Date.
        /// </summary>
        public static string UpToDate {
            get {
                return ResourceManager.GetString("UpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validate.
        /// </summary>
        public static string Validate {
            get {
                return ResourceManager.GetString("Validate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify files.
        /// </summary>
        public static string VerifyFiles {
            get {
                return ResourceManager.GetString("VerifyFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will verify all server and mod files. This may take a while. Do you want to continue?.
        /// </summary>
        public static string VerifyFilesText {
            get {
                return ResourceManager.GetString("VerifyFilesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying mod files.
        /// </summary>
        public static string VerifyModsLabel {
            get {
                return ResourceManager.GetString("VerifyModsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verifying server files.
        /// </summary>
        public static string VerifyServersLabel {
            get {
                return ResourceManager.GetString("VerifyServersLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam Collection/.json URL.
        /// </summary>
        public static string WatermarkModlistURL {
            get {
                return ResourceManager.GetString("WatermarkModlistURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid URL are either pointing to a steam collection or a json response/file.
        /// </summary>
        public static string WatermarkModlistURLTip {
            get {
                return ResourceManager.GetString("WatermarkModlistURLTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address.
        /// </summary>
        public static string WatermarkServerIp {
            get {
                return ResourceManager.GetString("WatermarkServerIp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string WatermarkServerPassword {
            get {
                return ResourceManager.GetString("WatermarkServerPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port.
        /// </summary>
        public static string WatermarkServerPort {
            get {
                return ResourceManager.GetString("WatermarkServerPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workshop.
        /// </summary>
        public static string WorkshopSteam {
            get {
                return ResourceManager.GetString("WorkshopSteam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrong Type.
        /// </summary>
        public static string WrongType {
            get {
                return ResourceManager.GetString("WrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of file provided is unsupported..
        /// </summary>
        public static string WrongTypeText {
            get {
                return ResourceManager.GetString("WrongTypeText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
    }
}
